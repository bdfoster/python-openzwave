--- python-openzwave-20120828.orig/openzwave.pyx	2012-08-30 21:16:27.000000000 +0200
+++ python-openzwave-20120828//openzwave.pyx	2012-08-30 21:21:51.000000000 +0200
@@ -232,7 +232,7 @@
         uint8 CreateScene()
         bint RemoveScene(uint8 sceneId)
         bint AddSceneValue(uint8 sceneId, ValueID& valueId, bint value)
-        bint AddSceneValue(uint8 sceneId, ValueID& valueId, bint value)
+        bint AddSceneValue(uint8 sceneId, ValueID& valueId, uint8 value)
         bint AddSceneValue( uint8 sceneId, ValueID& valueId, float value )
         bint AddSceneValue( uint8 sceneId, ValueID& valueId, int32 value )
         bint AddSceneValue( uint8 sceneId, ValueID& valueId, int16 value )
@@ -1241,7 +1241,18 @@
                 cret = self.manager.SetValue(values_map.at(id), type_string)
 
         return cret
-         
+
+    def refreshValue(self, id):
+        '''
+Refreshes the specified value from the Z-Wave network.
+A call to this function causes the library to send a message to the network to retrieve the current value
+of the specified ValueID (just like a poll, except only one-time, not recurring).
+
+@param id The unique identifier of the value to be refreshed.
+@return true if the driver and node were found; false otherwise
+        '''
+        return bool(self.manager.RefreshValue(values_map.at(id)))
+                
 #        string GetValueLabel(ValueID& valueid)
 #        void SetValueLabel(ValueID& valueid, string value)
 #        string GetValueUnits(ValueID& valueid)
